
-- Running command `
# Read the design
read_verilog /home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/aes_128_HT2_models_gemini-1.5-pro-latest_A1.v
# Synthesize the design
synth -top aes_128

# Read the liberty file
read_liberty -lib /home/omar/research/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib
# Map to specific cells
abc -liberty /home/omar/research/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib

# Optimize it
opt_clean -purge
# Clean up
clean
# Generate netlist
write_verilog -noattr /home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/aes_128_HT2_models_gemini-1.5-pro-latest_A1_net.v
# Show statistics
stat
' --

1. Executing Verilog-2005 frontend: /home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/aes_128_HT2_models_gemini-1.5-pro-latest_A1.v
Parsing Verilog input from `/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/aes_128_HT2_models_gemini-1.5-pro-latest_A1.v' to AST representation.
Generating RTLIL representation for module `\one_round'.
Generating RTLIL representation for module `\final_round'.
Generating RTLIL representation for module `\table_lookup'.
Generating RTLIL representation for module `\S4'.
Generating RTLIL representation for module `\T'.
Generating RTLIL representation for module `\S'.
Generating RTLIL representation for module `\xS'.
Generating RTLIL representation for module `\aes_128'.
Generating RTLIL representation for module `\expand_key_128'.
Successfully finished Verilog frontend.

2. Executing SYNTH pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).

2.1.1. Analyzing design hierarchy..
Top module:  \aes_128
Used module:     \final_round
Used module:         \S4
Used module:             \S
Used module:     \one_round
Used module:         \table_lookup
Used module:             \T
Used module:                 \xS
Used module:     \expand_key_128

2.1.2. Analyzing design hierarchy..
Top module:  \aes_128
Used module:     \final_round
Used module:         \S4
Used module:             \S
Used module:     \one_round
Used module:         \table_lookup
Used module:             \T
Used module:                 \xS
Used module:     \expand_key_128
Removed 0 unused modules.
Mapping positional arguments of cell expand_key_128.S4_0 (S4).
Mapping positional arguments of cell aes_128.rf (final_round).
Mapping positional arguments of cell aes_128.r9 (one_round).
Mapping positional arguments of cell aes_128.r8 (one_round).
Mapping positional arguments of cell aes_128.r7 (one_round).
Mapping positional arguments of cell aes_128.r6 (one_round).
Mapping positional arguments of cell aes_128.r5 (one_round).
Mapping positional arguments of cell aes_128.r4 (one_round).
Mapping positional arguments of cell aes_128.r3 (one_round).
Mapping positional arguments of cell aes_128.r2 (one_round).
Mapping positional arguments of cell aes_128.r1 (one_round).
Mapping positional arguments of cell aes_128.a10 (expand_key_128).
Mapping positional arguments of cell aes_128.a9 (expand_key_128).
Mapping positional arguments of cell aes_128.a8 (expand_key_128).
Mapping positional arguments of cell aes_128.a7 (expand_key_128).
Mapping positional arguments of cell aes_128.a6 (expand_key_128).
Mapping positional arguments of cell aes_128.a5 (expand_key_128).
Mapping positional arguments of cell aes_128.a4 (expand_key_128).
Mapping positional arguments of cell aes_128.a3 (expand_key_128).
Mapping positional arguments of cell aes_128.a2 (expand_key_128).
Mapping positional arguments of cell aes_128.a1 (expand_key_128).
Mapping positional arguments of cell T.s4 (xS).
Mapping positional arguments of cell T.s0 (S).
Mapping positional arguments of cell S4.S_3 (S).
Mapping positional arguments of cell S4.S_2 (S).
Mapping positional arguments of cell S4.S_1 (S).
Mapping positional arguments of cell S4.S_0 (S).
Mapping positional arguments of cell table_lookup.t3 (T).
Mapping positional arguments of cell table_lookup.t2 (T).
Mapping positional arguments of cell table_lookup.t1 (T).
Mapping positional arguments of cell table_lookup.t0 (T).
Mapping positional arguments of cell final_round.S4_4 (S4).
Mapping positional arguments of cell final_round.S4_3 (S4).
Mapping positional arguments of cell final_round.S4_2 (S4).
Mapping positional arguments of cell final_round.S4_1 (S4).
Mapping positional arguments of cell one_round.t3 (table_lookup).
Mapping positional arguments of cell one_round.t2 (table_lookup).
Mapping positional arguments of cell one_round.t1 (table_lookup).
Mapping positional arguments of cell one_round.t0 (table_lookup).

2.2. Executing PROC pass (convert processes to netlists).

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/table.v:331$25 in module xS.
Marked 1 switch rules as full_case in process $proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/table.v:64$24 in module S.
Removed a total of 0 dead cases.

2.2.3. Executing PROC_INIT pass (extract init attributes).

2.2.4. Executing PROC_ARST pass (detect async resets in processes).

2.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\expand_key_128.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/aes_128_HT2_models_gemini-1.5-pro-latest_A1.v:82$37'.
     1/1: $0\out_1[127:0]
Creating decoders for process `\expand_key_128.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/aes_128_HT2_models_gemini-1.5-pro-latest_A1.v:71$32'.
     1/1: { $0\k0a[31:0] $0\k1a[31:0] $0\k2a[31:0] $0\k3a[31:0] }
Creating decoders for process `\aes_128.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/aes_128_HT2_models_gemini-1.5-pro-latest_A1.v:15$26'.
     1/3: $0\k0[127:0]
     2/3: $0\s0[127:0]
     3/3: $0\leaked_data[127:0]
Creating decoders for process `\xS.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/table.v:331$25'.
     1/1: $0\out[7:0]
Creating decoders for process `\S.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/table.v:64$24'.
     1/1: $0\out[7:0]
Creating decoders for process `\final_round.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/round.v:78$22'.
     1/1: $0\state_out[127:0]
Creating decoders for process `\one_round.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/round.v:45$17'.
     1/1: $0\state_out[127:0]

2.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).

2.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\expand_key_128.\out_1' using process `\expand_key_128.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/aes_128_HT2_models_gemini-1.5-pro-latest_A1.v:82$37'.
  created $dff cell `$procdff$554' with positive edge clock.
Creating register for signal `\expand_key_128.\k0a' using process `\expand_key_128.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/aes_128_HT2_models_gemini-1.5-pro-latest_A1.v:71$32'.
  created $dff cell `$procdff$555' with positive edge clock.
Creating register for signal `\expand_key_128.\k1a' using process `\expand_key_128.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/aes_128_HT2_models_gemini-1.5-pro-latest_A1.v:71$32'.
  created $dff cell `$procdff$556' with positive edge clock.
Creating register for signal `\expand_key_128.\k2a' using process `\expand_key_128.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/aes_128_HT2_models_gemini-1.5-pro-latest_A1.v:71$32'.
  created $dff cell `$procdff$557' with positive edge clock.
Creating register for signal `\expand_key_128.\k3a' using process `\expand_key_128.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/aes_128_HT2_models_gemini-1.5-pro-latest_A1.v:71$32'.
  created $dff cell `$procdff$558' with positive edge clock.
Creating register for signal `\aes_128.\s0' using process `\aes_128.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/aes_128_HT2_models_gemini-1.5-pro-latest_A1.v:15$26'.
  created $dff cell `$procdff$559' with positive edge clock.
Creating register for signal `\aes_128.\k0' using process `\aes_128.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/aes_128_HT2_models_gemini-1.5-pro-latest_A1.v:15$26'.
  created $dff cell `$procdff$560' with positive edge clock.
Creating register for signal `\aes_128.\leaked_data' using process `\aes_128.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/aes_128_HT2_models_gemini-1.5-pro-latest_A1.v:15$26'.
  created $dff cell `$procdff$561' with positive edge clock.
Creating register for signal `\xS.\out' using process `\xS.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/table.v:331$25'.
  created $dff cell `$procdff$562' with positive edge clock.
Creating register for signal `\S.\out' using process `\S.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/table.v:64$24'.
  created $dff cell `$procdff$563' with positive edge clock.
Creating register for signal `\final_round.\state_out' using process `\final_round.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/round.v:78$22'.
  created $dff cell `$procdff$564' with positive edge clock.
Creating register for signal `\one_round.\state_out' using process `\one_round.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/round.v:45$17'.
  created $dff cell `$procdff$565' with positive edge clock.

2.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `expand_key_128.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/aes_128_HT2_models_gemini-1.5-pro-latest_A1.v:82$37'.
Removing empty process `expand_key_128.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/aes_128_HT2_models_gemini-1.5-pro-latest_A1.v:71$32'.
Found and cleaned up 1 empty switch in `\aes_128.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/aes_128_HT2_models_gemini-1.5-pro-latest_A1.v:15$26'.
Removing empty process `aes_128.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/aes_128_HT2_models_gemini-1.5-pro-latest_A1.v:15$26'.
Found and cleaned up 1 empty switch in `\xS.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/table.v:331$25'.
Removing empty process `xS.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/table.v:331$25'.
Found and cleaned up 1 empty switch in `\S.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/table.v:64$24'.
Removing empty process `S.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/table.v:64$24'.
Removing empty process `final_round.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/round.v:78$22'.
Removing empty process `one_round.$proc$/home/omar/research/vulnerable_designs_sky/models_gemini-1.5-pro-latest/aes_128/worked/round.v:45$17'.
Cleaned up 3 empty switches.

2.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module expand_key_128.
Optimizing module aes_128.
Optimizing module xS.
<suppressed ~1 debug messages>
Optimizing module S.
<suppressed ~1 debug messages>
Optimizing module T.
Optimizing module S4.
Optimizing module table_lookup.
Optimizing module final_round.
Optimizing module one_round.

2.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \expand_key_128..
Finding unused cells or wires in module \aes_128..
Finding unused cells or wires in module \xS..
Finding unused cells or wires in module \S..
Finding unused cells or wires in module \T..
Finding unused cells or wires in module \S4..
Finding unused cells or wires in module \table_lookup..
Finding unused cells or wires in module \final_round..
Finding unused cells or wires in module \one_round..
Removed 0 unused cells and 30 unused wires.
<suppressed ~7 debug messages>

2.5. Executing CHECK pass (checking for obvious problems).
checking module S..
checking module S4..
checking module T..
checking module aes_128..
checking module expand_key_128..
checking module final_round..
checking module one_round..
checking module table_lookup..
checking module xS..
found and reported 0 problems.

2.6. Executing OPT pass (performing simple optimizations).

2.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module S.
Optimizing module S4.
Optimizing module T.
Optimizing module aes_128.
Optimizing module expand_key_128.
Optimizing module final_round.
Optimizing module one_round.
Optimizing module table_lookup.
Optimizing module xS.

2.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\S'.
Finding identical cells in module `\S4'.
Finding identical cells in module `\T'.
Finding identical cells in module `\aes_128'.
Finding identical cells in module `\expand_key_128'.
Finding identical cells in module `\final_round'.
Finding identical cells in module `\one_round'.
Finding identical cells in module `\table_lookup'.
Finding identical cells in module `\xS'.
Removed a total of 0 cells.

2.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \S..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \S4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \T..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \aes_128..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \expand_key_128..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \final_round..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \one_round..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \table_lookup..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \xS..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

2.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \S.
  Optimizing cells in module \S4.
  Optimizing cells in module \T.
  Optimizing cells in module \aes_128.
  Optimizing cells in module \expand_key_128.
  Optimizing cells in module \final_round.
  Optimizing cells in module \one_round.
  Optimizing cells in module \table_lookup.
  Optimizing cells in module \xS.
Performed a total of 0 changes.

2.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\S'.
Finding identical cells in module `\S4'.
Finding identical cells in module `\T'.
Finding identical cells in module `\aes_128'.
Finding identical cells in module `\expand_key_128'.
Finding identical cells in module `\final_round'.
Finding identical cells in module `\one_round'.
Finding identical cells in module `\table_lookup'.
Finding identical cells in module `\xS'.
Removed a total of 0 cells.

2.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \S..
Finding unused cells or wires in module \S4..
Finding unused cells or wires in module \T..
Finding unused cells or wires in module \aes_128..
Finding unused cells or wires in module \expand_key_128..
Finding unused cells or wires in module \final_round..
Finding unused cells or wires in module \one_round..
Finding unused cells or wires in module \table_lookup..
Finding unused cells or wires in module \xS..

2.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module S.
Optimizing module S4.
Optimizing module T.
Optimizing module aes_128.
Optimizing module expand_key_128.
Optimizing module final_round.
Optimizing module one_round.
Optimizing module table_lookup.
Optimizing module xS.

2.6.9. Finished OPT passes. (There is nothing left to do.)

2.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 8) from port B of cell S.$procmux$426_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$427_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$428_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$429_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$430_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$431_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$432_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$433_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$434_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$435_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$436_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$437_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$438_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$439_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$440_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$441_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$442_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$443_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$444_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$445_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$446_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$447_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$448_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$449_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$450_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$451_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$452_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$453_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$454_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$455_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$456_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$457_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$458_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$459_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$460_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$461_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$462_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$463_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$464_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$465_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$466_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$467_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$468_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$469_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$470_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$471_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$472_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$473_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$474_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$475_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$476_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$477_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$478_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$479_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$480_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$481_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$482_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$483_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$484_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$485_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$486_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$487_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$488_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell S.$procmux$489_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$490_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$491_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$492_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$493_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$494_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$495_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$496_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$497_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$498_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$499_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$500_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$501_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$502_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$503_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$504_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$505_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$506_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$507_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$508_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$509_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$510_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$511_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$512_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$513_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$514_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$515_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$516_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$517_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$518_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$519_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$520_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell S.$procmux$521_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell S.$procmux$522_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell S.$procmux$523_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell S.$procmux$524_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell S.$procmux$525_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell S.$procmux$526_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell S.$procmux$527_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell S.$procmux$528_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell S.$procmux$529_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell S.$procmux$530_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell S.$procmux$531_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell S.$procmux$532_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell S.$procmux$533_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell S.$procmux$534_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell S.$procmux$535_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell S.$procmux$536_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell S.$procmux$537_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell S.$procmux$538_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell S.$procmux$539_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell S.$procmux$540_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell S.$procmux$541_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell S.$procmux$542_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell S.$procmux$543_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell S.$procmux$544_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell S.$procmux$545_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell S.$procmux$546_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell S.$procmux$547_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell S.$procmux$548_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell S.$procmux$549_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell S.$procmux$550_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell S.$procmux$551_CMP0 ($eq).
Removed top 7 bits (of 8) from port B of cell S.$procmux$552_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$169_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$170_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$171_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$172_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$173_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$174_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$175_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$176_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$177_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$178_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$179_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$180_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$181_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$182_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$183_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$184_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$185_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$186_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$187_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$188_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$189_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$190_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$191_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$192_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$193_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$194_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$195_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$196_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$197_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$198_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$199_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$200_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$201_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$202_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$203_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$204_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$205_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$206_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$207_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$208_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$209_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$210_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$211_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$212_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$213_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$214_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$215_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$216_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$217_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$218_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$219_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$220_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$221_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$222_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$223_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$224_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$225_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$226_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$227_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$228_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$229_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$230_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$231_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell xS.$procmux$232_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$233_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$234_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$235_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$236_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$237_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$238_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$239_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$240_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$241_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$242_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$243_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$244_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$245_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$246_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$247_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$248_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$249_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$250_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$251_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$252_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$253_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$254_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$255_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$256_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$257_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$258_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$259_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$260_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$261_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$262_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$263_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell xS.$procmux$264_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell xS.$procmux$265_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell xS.$procmux$266_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell xS.$procmux$267_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell xS.$procmux$268_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell xS.$procmux$269_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell xS.$procmux$270_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell xS.$procmux$271_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell xS.$procmux$272_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell xS.$procmux$273_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell xS.$procmux$274_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell xS.$procmux$275_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell xS.$procmux$276_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell xS.$procmux$277_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell xS.$procmux$278_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell xS.$procmux$279_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell xS.$procmux$280_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell xS.$procmux$281_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell xS.$procmux$282_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell xS.$procmux$283_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell xS.$procmux$284_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell xS.$procmux$285_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell xS.$procmux$286_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell xS.$procmux$287_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell xS.$procmux$288_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell xS.$procmux$289_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell xS.$procmux$290_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell xS.$procmux$291_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell xS.$procmux$292_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell xS.$procmux$293_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell xS.$procmux$294_CMP0 ($eq).
Removed top 7 bits (of 8) from port B of cell xS.$procmux$295_CMP0 ($eq).

2.8. Executing PEEPOPT pass (run peephole optimizers).

2.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \S..
Finding unused cells or wires in module \S4..
Finding unused cells or wires in module \T..
Finding unused cells or wires in module \aes_128..
Finding unused cells or wires in module \expand_key_128..
Finding unused cells or wires in module \final_round..
Finding unused cells or wires in module \one_round..
Finding unused cells or wires in module \table_lookup..
Finding unused cells or wires in module \xS..

2.10. Executing TECHMAP pass (map to technology primitives).

2.10.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.10.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4084 debug messages>

2.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module S:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module S4:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module T:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module aes_128:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module expand_key_128:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module final_round:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module one_round:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module table_lookup:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module xS:
  created 0 $alu and 0 $macc cells.

2.12. Executing SHARE pass (SAT-based resource sharing).

2.13. Executing OPT pass (performing simple optimizations).

2.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module S.
Optimizing module S4.
Optimizing module T.
Optimizing module aes_128.
Optimizing module expand_key_128.
Optimizing module final_round.
Optimizing module one_round.
Optimizing module table_lookup.
Optimizing module xS.

2.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\S'.
Finding identical cells in module `\S4'.
Finding identical cells in module `\T'.
Finding identical cells in module `\aes_128'.
Finding identical cells in module `\expand_key_128'.
Finding identical cells in module `\final_round'.
Finding identical cells in module `\one_round'.
Finding identical cells in module `\table_lookup'.
Finding identical cells in module `\xS'.
Removed a total of 0 cells.

2.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \S..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \S4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \T..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \aes_128..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \expand_key_128..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \final_round..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \one_round..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \table_lookup..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \xS..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

2.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \S.
  Optimizing cells in module \S4.
  Optimizing cells in module \T.
  Optimizing cells in module \aes_128.
  Optimizing cells in module \expand_key_128.
  Optimizing cells in module \final_round.
  Optimizing cells in module \one_round.
  Optimizing cells in module \table_lookup.
  Optimizing cells in module \xS.
Performed a total of 0 changes.

2.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\S'.
Finding identical cells in module `\S4'.
Finding identical cells in module `\T'.
Finding identical cells in module `\aes_128'.
Finding identical cells in module `\expand_key_128'.
Finding identical cells in module `\final_round'.
Finding identical cells in module `\one_round'.
Finding identical cells in module `\table_lookup'.
Finding identical cells in module `\xS'.
Removed a total of 0 cells.

2.13.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \S..
Finding unused cells or wires in module \S4..
Finding unused cells or wires in module \T..
Finding unused cells or wires in module \aes_128..
Finding unused cells or wires in module \expand_key_128..
Finding unused cells or wires in module \final_round..
Finding unused cells or wires in module \one_round..
Finding unused cells or wires in module \table_lookup..
Finding unused cells or wires in module \xS..

2.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module S.
Optimizing module S4.
Optimizing module T.
Optimizing module aes_128.
Optimizing module expand_key_128.
Optimizing module final_round.
Optimizing module one_round.
Optimizing module table_lookup.
Optimizing module xS.

2.13.9. Finished OPT passes. (There is nothing left to do.)

2.14. Executing FSM pass (extract and optimize FSM).

2.14.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking S.out as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Not marking xS.out as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.

2.14.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.14.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \S..
Finding unused cells or wires in module \S4..
Finding unused cells or wires in module \T..
Finding unused cells or wires in module \aes_128..
Finding unused cells or wires in module \expand_key_128..
Finding unused cells or wires in module \final_round..
Finding unused cells or wires in module \one_round..
Finding unused cells or wires in module \table_lookup..
Finding unused cells or wires in module \xS..

2.14.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.14.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.14.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.14.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.15. Executing OPT pass (performing simple optimizations).

2.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module S.
Optimizing module S4.
Optimizing module T.
Optimizing module aes_128.
Optimizing module expand_key_128.
Optimizing module final_round.
Optimizing module one_round.
Optimizing module table_lookup.
Optimizing module xS.

2.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\S'.
Finding identical cells in module `\S4'.
Finding identical cells in module `\T'.
Finding identical cells in module `\aes_128'.
Finding identical cells in module `\expand_key_128'.
Finding identical cells in module `\final_round'.
Finding identical cells in module `\one_round'.
Finding identical cells in module `\table_lookup'.
Finding identical cells in module `\xS'.
Removed a total of 0 cells.

2.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \S..
Finding unused cells or wires in module \S4..
Finding unused cells or wires in module \T..
Finding unused cells or wires in module \aes_128..
Finding unused cells or wires in module \expand_key_128..
Finding unused cells or wires in module \final_round..
Finding unused cells or wires in module \one_round..
Finding unused cells or wires in module \table_lookup..
Finding unused cells or wires in module \xS..

2.15.5. Finished fast OPT passes.

2.16. Executing MEMORY pass.

2.16.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

2.16.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \S..
Finding unused cells or wires in module \S4..
Finding unused cells or wires in module \T..
Finding unused cells or wires in module \aes_128..
Finding unused cells or wires in module \expand_key_128..
Finding unused cells or wires in module \final_round..
Finding unused cells or wires in module \one_round..
Finding unused cells or wires in module \table_lookup..
Finding unused cells or wires in module \xS..

2.16.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \S..
Finding unused cells or wires in module \S4..
Finding unused cells or wires in module \T..
Finding unused cells or wires in module \aes_128..
Finding unused cells or wires in module \expand_key_128..
Finding unused cells or wires in module \final_round..
Finding unused cells or wires in module \one_round..
Finding unused cells or wires in module \table_lookup..
Finding unused cells or wires in module \xS..

2.16.5. Executing MEMORY_COLLECT pass (generating $mem cells).

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \S..
Finding unused cells or wires in module \S4..
Finding unused cells or wires in module \T..
Finding unused cells or wires in module \aes_128..
Finding unused cells or wires in module \expand_key_128..
Finding unused cells or wires in module \final_round..
Finding unused cells or wires in module \one_round..
Finding unused cells or wires in module \table_lookup..
Finding unused cells or wires in module \xS..

2.18. Executing OPT pass (performing simple optimizations).

2.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module S.
<suppressed ~1 debug messages>
Optimizing module S4.
Optimizing module T.
Optimizing module aes_128.
Optimizing module expand_key_128.
Optimizing module final_round.
Optimizing module one_round.
Optimizing module table_lookup.
Optimizing module xS.
<suppressed ~1 debug messages>

2.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\S'.
Finding identical cells in module `\S4'.
Finding identical cells in module `\T'.
Finding identical cells in module `\aes_128'.
Finding identical cells in module `\expand_key_128'.
Finding identical cells in module `\final_round'.
Finding identical cells in module `\one_round'.
Finding identical cells in module `\table_lookup'.
Finding identical cells in module `\xS'.
Removed a total of 0 cells.

2.18.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \S..
Finding unused cells or wires in module \S4..
Finding unused cells or wires in module \T..
Finding unused cells or wires in module \aes_128..
Finding unused cells or wires in module \expand_key_128..
Finding unused cells or wires in module \final_round..
Finding unused cells or wires in module \one_round..
Finding unused cells or wires in module \table_lookup..
Finding unused cells or wires in module \xS..
Removed 2 unused cells and 2 unused wires.
<suppressed ~4 debug messages>

2.18.5. Finished fast OPT passes.

2.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

2.20. Executing OPT pass (performing simple optimizations).

2.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module S.
Optimizing module S4.
Optimizing module T.
Optimizing module aes_128.
Optimizing module expand_key_128.
Optimizing module final_round.
Optimizing module one_round.
Optimizing module table_lookup.
Optimizing module xS.

2.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\S'.
Finding identical cells in module `\S4'.
Finding identical cells in module `\T'.
Finding identical cells in module `\aes_128'.
Finding identical cells in module `\expand_key_128'.
Finding identical cells in module `\final_round'.
Finding identical cells in module `\one_round'.
Finding identical cells in module `\table_lookup'.
Finding identical cells in module `\xS'.
Removed a total of 0 cells.

2.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \S..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \S4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \T..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \aes_128..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \expand_key_128..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \final_round..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \one_round..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \table_lookup..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \xS..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

2.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \S.
  Optimizing cells in module \S4.
  Optimizing cells in module \T.
  Optimizing cells in module \aes_128.
  Optimizing cells in module \expand_key_128.
  Optimizing cells in module \final_round.
  Optimizing cells in module \one_round.
  Optimizing cells in module \table_lookup.
  Optimizing cells in module \xS.
Performed a total of 0 changes.

2.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\S'.
Finding identical cells in module `\S4'.
Finding identical cells in module `\T'.
Finding identical cells in module `\aes_128'.
Finding identical cells in module `\expand_key_128'.
Finding identical cells in module `\final_round'.
Finding identical cells in module `\one_round'.
Finding identical cells in module `\table_lookup'.
Finding identical cells in module `\xS'.
Removed a total of 0 cells.

2.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \S..
Finding unused cells or wires in module \S4..
Finding unused cells or wires in module \T..
Finding unused cells or wires in module \aes_128..
Finding unused cells or wires in module \expand_key_128..
Finding unused cells or wires in module \final_round..
Finding unused cells or wires in module \one_round..
Finding unused cells or wires in module \table_lookup..
Finding unused cells or wires in module \xS..

2.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module S.
Optimizing module S4.
Optimizing module T.
Optimizing module aes_128.
Optimizing module expand_key_128.
Optimizing module final_round.
Optimizing module one_round.
Optimizing module table_lookup.
Optimizing module xS.

2.20.9. Finished OPT passes. (There is nothing left to do.)

2.21. Executing TECHMAP pass (map to technology primitives).

2.21.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=255 for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $xor.
No more expansions possible.
<suppressed ~1096 debug messages>

2.22. Executing OPT pass (performing simple optimizations).

2.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module S.
<suppressed ~4076 debug messages>
Optimizing module S4.
Optimizing module T.
Optimizing module aes_128.
Optimizing module expand_key_128.
Optimizing module final_round.
Optimizing module one_round.
Optimizing module table_lookup.
Optimizing module xS.
<suppressed ~4076 debug messages>

2.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\S'.
<suppressed ~8538 debug messages>
Finding identical cells in module `\S4'.
Finding identical cells in module `\T'.
Finding identical cells in module `\aes_128'.
Finding identical cells in module `\expand_key_128'.
Finding identical cells in module `\final_round'.
Finding identical cells in module `\one_round'.
Finding identical cells in module `\table_lookup'.
Finding identical cells in module `\xS'.
<suppressed ~8508 debug messages>
Removed a total of 5682 cells.

2.22.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \S..
Finding unused cells or wires in module \S4..
Finding unused cells or wires in module \T..
Finding unused cells or wires in module \aes_128..
Finding unused cells or wires in module \expand_key_128..
Finding unused cells or wires in module \final_round..
Finding unused cells or wires in module \one_round..
Finding unused cells or wires in module \table_lookup..
Finding unused cells or wires in module \xS..
Removed 0 unused cells and 3009 unused wires.
<suppressed ~2 debug messages>

2.22.5. Finished fast OPT passes.

2.23. Executing ABC pass (technology mapping using ABC).

2.23.1. Extracting gate netlist of module `\S' to `<abc-temp-dir>/input.blif'..
Extracted 1492 gates and 1502 wires to a netlist network with 8 inputs and 8 outputs.

2.23.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:       45
ABC RESULTS:              AOI3 cells:      219
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:      154
ABC RESULTS:              OAI3 cells:       10
ABC RESULTS:                OR cells:      666
ABC RESULTS:             ORNOT cells:       11
ABC RESULTS:        internal signals:     1486
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        8
Removing temp directory.

2.23.2. Extracting gate netlist of module `\S4' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.23.3. Extracting gate netlist of module `\T' to `<abc-temp-dir>/input.blif'..
Extracted 8 gates and 24 wires to a netlist network with 16 inputs and 8 outputs.

2.23.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.3.2. Re-integrating ABC results.
ABC RESULTS:               XOR cells:        8
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:        8
Removing temp directory.

2.23.4. Extracting gate netlist of module `\aes_128' to `<abc-temp-dir>/input.blif'..
Extracted 256 gates and 769 wires to a netlist network with 513 inputs and 256 outputs.

2.23.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.4.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:      128
ABC RESULTS:               XOR cells:      128
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:      513
ABC RESULTS:          output signals:      256
Removing temp directory.

2.23.5. Extracting gate netlist of module `\expand_key_128' to `<abc-temp-dir>/input.blif'..
Extracted 232 gates and 528 wires to a netlist network with 296 inputs and 232 outputs.

2.23.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.5.2. Re-integrating ABC results.
ABC RESULTS:               XOR cells:      232
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:      296
ABC RESULTS:          output signals:      232
Removing temp directory.

2.23.6. Extracting gate netlist of module `\final_round' to `<abc-temp-dir>/input.blif'..
Extracted 128 gates and 384 wires to a netlist network with 256 inputs and 128 outputs.

2.23.6.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.6.2. Re-integrating ABC results.
ABC RESULTS:               XOR cells:      128
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:      256
ABC RESULTS:          output signals:      128
Removing temp directory.

2.23.7. Extracting gate netlist of module `\one_round' to `<abc-temp-dir>/input.blif'..
Extracted 512 gates and 1152 wires to a netlist network with 640 inputs and 128 outputs.

2.23.7.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.7.2. Re-integrating ABC results.
ABC RESULTS:              XNOR cells:      256
ABC RESULTS:               XOR cells:      256
ABC RESULTS:        internal signals:      384
ABC RESULTS:           input signals:      640
ABC RESULTS:          output signals:      128
Removing temp directory.

2.23.8. Extracting gate netlist of module `\table_lookup' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.23.9. Extracting gate netlist of module `\xS' to `<abc-temp-dir>/input.blif'..
Extracted 1502 gates and 1512 wires to a netlist network with 8 inputs and 8 outputs.

2.23.9.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.9.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:       47
ABC RESULTS:              AOI3 cells:      223
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:      156
ABC RESULTS:              OAI3 cells:       11
ABC RESULTS:                OR cells:      671
ABC RESULTS:             ORNOT cells:       10
ABC RESULTS:        internal signals:     1496
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        8
Removing temp directory.

2.24. Executing OPT pass (performing simple optimizations).

2.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module S.
Optimizing module S4.
Optimizing module T.
Optimizing module aes_128.
Optimizing module expand_key_128.
Optimizing module final_round.
Optimizing module one_round.
Optimizing module table_lookup.
Optimizing module xS.

2.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\S'.
Finding identical cells in module `\S4'.
Finding identical cells in module `\T'.
Finding identical cells in module `\aes_128'.
Finding identical cells in module `\expand_key_128'.
Finding identical cells in module `\final_round'.
Finding identical cells in module `\one_round'.
Finding identical cells in module `\table_lookup'.
Finding identical cells in module `\xS'.
Removed a total of 0 cells.

2.24.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \S..
Finding unused cells or wires in module \S4..
Finding unused cells or wires in module \T..
Finding unused cells or wires in module \aes_128..
Finding unused cells or wires in module \expand_key_128..
Finding unused cells or wires in module \final_round..
Finding unused cells or wires in module \one_round..
Finding unused cells or wires in module \table_lookup..
Finding unused cells or wires in module \xS..
Removed 0 unused cells and 3270 unused wires.
<suppressed ~7 debug messages>

2.24.5. Finished fast OPT passes.

2.25. Executing HIERARCHY pass (managing design hierarchy).

2.25.1. Analyzing design hierarchy..
Top module:  \aes_128
Used module:     \expand_key_128
Used module:         \S4
Used module:             \S
Used module:     \one_round
Used module:         \table_lookup
Used module:             \T
Used module:                 \xS
Used module:     \final_round

2.25.2. Analyzing design hierarchy..
Top module:  \aes_128
Used module:     \expand_key_128
Used module:         \S4
Used module:             \S
Used module:     \one_round
Used module:         \table_lookup
Used module:             \T
Used module:                 \xS
Used module:     \final_round
Removed 0 unused modules.

2.26. Printing statistics.

=== S ===

   Number of wires:               1107
   Number of wire bits:           1128
   Number of public wires:           3
   Number of public wire bits:      17
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1119
     $_ANDNOT_                      45
     $_AND_                          1
     $_AOI3_                       219
     $_DFF_P_                        8
     $_NAND_                         5
     $_NOR_                        154
     $_OAI3_                        10
     $_ORNOT_                       11
     $_OR_                         666

=== S4 ===

   Number of wires:                  3
   Number of wire bits:             65
   Number of public wires:           3
   Number of public wire bits:      65
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     S                               4

=== T ===

   Number of wires:                  3
   Number of wire bits:             41
   Number of public wires:           3
   Number of public wire bits:      41
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 10
     $_XOR_                          8
     S                               1
     xS                              1

=== aes_128 ===

   Number of wires:                 38
   Number of wire bits:           4610
   Number of public wires:          36
   Number of public wire bits:    4354
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                660
     $_DFF_P_                      384
     $_MUX_                        128
     $_XOR_                        128
     expand_key_128                 10
     final_round                     1
     one_round                       9

=== expand_key_128 ===

   Number of wires:                 22
   Number of wire bits:            937
   Number of public wires:          22
   Number of public wire bits:     937
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                489
     $_DFF_P_                      256
     $_XOR_                        232
     S4                              1

=== final_round ===

   Number of wires:                 32
   Number of wire bits:            897
   Number of public wires:          32
   Number of public wire bits:     897
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                260
     $_DFF_P_                      128
     $_XOR_                        128
     S4                              4

=== one_round ===

   Number of wires:                416
   Number of wire bits:           1665
   Number of public wires:          32
   Number of public wire bits:    1281
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                644
     $_DFF_P_                      128
     $_XNOR_                       256
     $_XOR_                        256
     table_lookup                    4

=== table_lookup ===

   Number of wires:                 10
   Number of wire bits:            193
   Number of public wires:          10
   Number of public wire bits:     193
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     T                               4

=== xS ===

   Number of wires:               1120
   Number of wire bits:           1141
   Number of public wires:           3
   Number of public wire bits:      17
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1132
     $_ANDNOT_                      47
     $_AND_                          1
     $_AOI3_                       223
     $_DFF_P_                        8
     $_NAND_                         5
     $_NOR_                        156
     $_OAI3_                        11
     $_ORNOT_                       10
     $_OR_                         671

=== design hierarchy ===

   aes_128                           1
     expand_key_128                 10
       S4                            1
         S                           4
     final_round                     1
       S4                            4
         S                           4
     one_round                       9
       table_lookup                  4
         T                           4
           S                         1
           xS                        1

   Number of wires:             387548
   Number of wire bits:         433528
   Number of public wires:        2442
   Number of public wire bits:   45760
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:             399496
     $_ANDNOT_                   15768
     $_AND_                        344
     $_AOI3_                     75912
     $_DFF_P_                     6976
     $_MUX_                        128
     $_NAND_                      1720
     $_NOR_                      53264
     $_OAI3_                      3584
     $_ORNOT_                     3640
     $_OR_                      229824
     $_XNOR_                      2304
     $_XOR_                       6032

2.27. Executing CHECK pass (checking for obvious problems).
checking module S..
checking module S4..
checking module T..
checking module aes_128..
checking module expand_key_128..
checking module final_round..
checking module one_round..
checking module table_lookup..
checking module xS..
found and reported 0 problems.

3. Executing Liberty frontend.
Imported 428 cell types from liberty file.

4. Executing ABC pass (technology mapping using ABC).

4.1. Extracting gate netlist of module `\S' to `<abc-temp-dir>/input.blif'..
Extracted 1111 gates and 1119 wires to a netlist network with 8 inputs and 8 outputs.

4.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/omar/research/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.09 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/home/omar/research/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.12 sec
ABC: Memory =   16.04 MB. Time =     0.12 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a2111o_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_0 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__a211o_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a211oi_1 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__a21o_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:       32
ABC RESULTS:   sky130_fd_sc_hd__a221oi_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a22o_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a22oi_1 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__a2bb2oi_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a31o_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a31oi_1 cells:       20
ABC RESULTS:   sky130_fd_sc_hd__a32oi_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a41o_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a41oi_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__and2_0 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__and3_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and3b_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and4_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and4b_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__lpflow_inputiso1p_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__lpflow_isobufsrc_1 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__mux2i_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand2_1 cells:       27
ABC RESULTS:   sky130_fd_sc_hd__nand2b_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__nand3_1 cells:       23
ABC RESULTS:   sky130_fd_sc_hd__nand3b_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__nand4_1 cells:       15
ABC RESULTS:   sky130_fd_sc_hd__nand4b_1 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__nand4bb_1 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:       67
ABC RESULTS:   sky130_fd_sc_hd__nor2b_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor3_1 cells:       35
ABC RESULTS:   sky130_fd_sc_hd__nor3b_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__nor4_1 cells:       26
ABC RESULTS:   sky130_fd_sc_hd__nor4b_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__nor4bb_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_1 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__o211ai_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o21ai_0 cells:       27
ABC RESULTS:   sky130_fd_sc_hd__o221ai_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o22a_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o22ai_1 cells:       20
ABC RESULTS:   sky130_fd_sc_hd__o31ai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o32a_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o32ai_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o41ai_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__or3_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__or3b_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__or4_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__or4b_1 cells:        8
ABC RESULTS:        internal signals:     1103
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        8
Removing temp directory.

4.2. Extracting gate netlist of module `\S4' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

4.3. Extracting gate netlist of module `\T' to `<abc-temp-dir>/input.blif'..
Extracted 8 gates and 24 wires to a netlist network with 16 inputs and 8 outputs.

4.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/omar/research/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.09 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/home/omar/research/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.13 sec
ABC: Memory =   16.04 MB. Time =     0.13 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.3.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__xor2_1 cells:        8
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:        8
Removing temp directory.

4.4. Extracting gate netlist of module `\aes_128' to `<abc-temp-dir>/input.blif'..
Extracted 256 gates and 769 wires to a netlist network with 513 inputs and 256 outputs.

4.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/omar/research/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.09 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/home/omar/research/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.13 sec
ABC: Memory =   16.04 MB. Time =     0.13 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.4.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__mux2_1 cells:      128
ABC RESULTS:   sky130_fd_sc_hd__xor2_1 cells:      128
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:      513
ABC RESULTS:          output signals:      256
Removing temp directory.

4.5. Extracting gate netlist of module `\expand_key_128' to `<abc-temp-dir>/input.blif'..
Extracted 232 gates and 528 wires to a netlist network with 296 inputs and 232 outputs.

4.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/omar/research/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.09 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/home/omar/research/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.13 sec
ABC: Memory =   16.04 MB. Time =     0.13 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.5.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:       24
ABC RESULTS:   sky130_fd_sc_hd__xnor2_1 cells:       48
ABC RESULTS:   sky130_fd_sc_hd__xnor3_1 cells:       24
ABC RESULTS:   sky130_fd_sc_hd__xor2_1 cells:      144
ABC RESULTS:   sky130_fd_sc_hd__xor3_1 cells:       16
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:      296
ABC RESULTS:          output signals:      232
Removing temp directory.

4.6. Extracting gate netlist of module `\final_round' to `<abc-temp-dir>/input.blif'..
Extracted 128 gates and 384 wires to a netlist network with 256 inputs and 128 outputs.

4.6.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/omar/research/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.09 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/home/omar/research/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.13 sec
ABC: Memory =   16.04 MB. Time =     0.13 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.6.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__xor2_1 cells:      128
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:      256
ABC RESULTS:          output signals:      128
Removing temp directory.

4.7. Extracting gate netlist of module `\one_round' to `<abc-temp-dir>/input.blif'..
Extracted 512 gates and 1152 wires to a netlist network with 640 inputs and 128 outputs.

4.7.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/omar/research/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.09 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/home/omar/research/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.13 sec
ABC: Memory =   16.04 MB. Time =     0.13 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.7.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__xnor2_1 cells:      128
ABC RESULTS:   sky130_fd_sc_hd__xnor3_1 cells:      128
ABC RESULTS:   sky130_fd_sc_hd__xor2_1 cells:      128
ABC RESULTS:        internal signals:      384
ABC RESULTS:           input signals:      640
ABC RESULTS:          output signals:      128
Removing temp directory.

4.8. Extracting gate netlist of module `\table_lookup' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

4.9. Extracting gate netlist of module `\xS' to `<abc-temp-dir>/input.blif'..
Extracted 1124 gates and 1132 wires to a netlist network with 8 inputs and 8 outputs.

4.9.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/omar/research/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.09 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/home/omar/research/skywater-pdk/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.13 sec
ABC: Memory =   16.04 MB. Time =     0.13 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.9.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a2111o_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_0 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__a211oi_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:       33
ABC RESULTS:   sky130_fd_sc_hd__a221oi_1 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__a22o_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a22oi_1 cells:       25
ABC RESULTS:   sky130_fd_sc_hd__a2bb2oi_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a31oi_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a32o_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a32oi_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and2_0 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and3_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__lpflow_inputiso1p_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__lpflow_isobufsrc_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__nand2_1 cells:       41
ABC RESULTS:   sky130_fd_sc_hd__nand2b_1 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__nand3_1 cells:       32
ABC RESULTS:   sky130_fd_sc_hd__nand3b_1 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__nand4_1 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__nand4b_1 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__nand4bb_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:       77
ABC RESULTS:   sky130_fd_sc_hd__nor3_1 cells:       38
ABC RESULTS:   sky130_fd_sc_hd__nor4_1 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__nor4b_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nor4bb_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_1 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__o211ai_1 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__o21ai_0 cells:       46
ABC RESULTS:   sky130_fd_sc_hd__o21bai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o22ai_1 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__o311ai_0 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o31ai_1 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__o32ai_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o41ai_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__or3_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or3b_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__or4_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__or4b_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__xnor2_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__xor2_1 cells:        1
ABC RESULTS:        internal signals:     1116
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        8
Removing temp directory.

5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \S..
Finding unused cells or wires in module \S4..
Finding unused cells or wires in module \T..
Finding unused cells or wires in module \aes_128..
Finding unused cells or wires in module \expand_key_128..
Finding unused cells or wires in module \final_round..
Finding unused cells or wires in module \one_round..
Finding unused cells or wires in module \table_lookup..
Finding unused cells or wires in module \xS..
Removed 0 unused cells and 5136 unused wires.
<suppressed ~35 debug messages>

6. Executing Verilog backend.
Dumping module `\S'.
Dumping module `\S4'.
Dumping module `\T'.
Dumping module `\aes_128'.
Dumping module `\expand_key_128'.
Dumping module `\final_round'.
Dumping module `\one_round'.
Dumping module `\table_lookup'.
Dumping module `\xS'.

7. Printing statistics.

=== S ===

   Number of wires:                440
   Number of wire bits:            461
   Number of public wires:           3
   Number of public wire bits:      17
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                452
     $_DFF_P_                        8
     sky130_fd_sc_hd__a2111o_1       1
     sky130_fd_sc_hd__a2111oi_0     13
     sky130_fd_sc_hd__a211o_1        3
     sky130_fd_sc_hd__a211oi_1       6
     sky130_fd_sc_hd__a21o_1         1
     sky130_fd_sc_hd__a21oi_1       32
     sky130_fd_sc_hd__a221oi_1       4
     sky130_fd_sc_hd__a22o_1         1
     sky130_fd_sc_hd__a22oi_1        7
     sky130_fd_sc_hd__a2bb2oi_1      1
     sky130_fd_sc_hd__a31o_1         1
     sky130_fd_sc_hd__a31oi_1       20
     sky130_fd_sc_hd__a32oi_1        1
     sky130_fd_sc_hd__a41o_1         2
     sky130_fd_sc_hd__a41oi_1        4
     sky130_fd_sc_hd__and2_0         4
     sky130_fd_sc_hd__and3_1         2
     sky130_fd_sc_hd__and3b_1        2
     sky130_fd_sc_hd__and4_1         1
     sky130_fd_sc_hd__and4b_1        2
     sky130_fd_sc_hd__clkinv_1       1
     sky130_fd_sc_hd__lpflow_inputiso1p_1      2
     sky130_fd_sc_hd__lpflow_isobufsrc_1      6
     sky130_fd_sc_hd__mux2i_1        1
     sky130_fd_sc_hd__nand2_1       27
     sky130_fd_sc_hd__nand2b_1       5
     sky130_fd_sc_hd__nand3_1       23
     sky130_fd_sc_hd__nand3b_1       5
     sky130_fd_sc_hd__nand4_1       15
     sky130_fd_sc_hd__nand4b_1       9
     sky130_fd_sc_hd__nand4bb_1      7
     sky130_fd_sc_hd__nor2_1        67
     sky130_fd_sc_hd__nor2b_1        1
     sky130_fd_sc_hd__nor3_1        35
     sky130_fd_sc_hd__nor3b_1        4
     sky130_fd_sc_hd__nor4_1        26
     sky130_fd_sc_hd__nor4b_1        4
     sky130_fd_sc_hd__nor4bb_1       4
     sky130_fd_sc_hd__o2111ai_1     10
     sky130_fd_sc_hd__o211ai_1       3
     sky130_fd_sc_hd__o21ai_0       27
     sky130_fd_sc_hd__o221ai_1       5
     sky130_fd_sc_hd__o22a_1         2
     sky130_fd_sc_hd__o22ai_1       20
     sky130_fd_sc_hd__o31ai_1        1
     sky130_fd_sc_hd__o32a_1         1
     sky130_fd_sc_hd__o32ai_1        3
     sky130_fd_sc_hd__o41ai_1        2
     sky130_fd_sc_hd__or3_1          4
     sky130_fd_sc_hd__or3b_1         5
     sky130_fd_sc_hd__or4_1          3
     sky130_fd_sc_hd__or4b_1         8

=== S4 ===

   Number of wires:                  3
   Number of wire bits:             65
   Number of public wires:           3
   Number of public wire bits:      65
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     S                               4

=== T ===

   Number of wires:                  3
   Number of wire bits:             41
   Number of public wires:           3
   Number of public wire bits:      41
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 10
     S                               1
     sky130_fd_sc_hd__xor2_1         8
     xS                              1

=== aes_128 ===

   Number of wires:                 38
   Number of wire bits:           4610
   Number of public wires:          36
   Number of public wire bits:    4354
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                660
     $_DFF_P_                      384
     expand_key_128                 10
     final_round                     1
     one_round                       9
     sky130_fd_sc_hd__mux2_1       128
     sky130_fd_sc_hd__xor2_1       128

=== expand_key_128 ===

   Number of wires:                 38
   Number of wire bits:            705
   Number of public wires:          14
   Number of public wire bits:     681
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                513
     $_DFF_P_                      256
     S4                              1
     sky130_fd_sc_hd__clkinv_1      24
     sky130_fd_sc_hd__xnor2_1       48
     sky130_fd_sc_hd__xnor3_1       24
     sky130_fd_sc_hd__xor2_1       144
     sky130_fd_sc_hd__xor3_1        16

=== final_round ===

   Number of wires:                 24
   Number of wire bits:            641
   Number of public wires:          24
   Number of public wire bits:     641
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                260
     $_DFF_P_                      128
     S4                              4
     sky130_fd_sc_hd__xor2_1       128

=== one_round ===

   Number of wires:                280
   Number of wire bits:           1281
   Number of public wires:          24
   Number of public wire bits:    1025
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                516
     $_DFF_P_                      128
     sky130_fd_sc_hd__xnor2_1      128
     sky130_fd_sc_hd__xnor3_1      128
     sky130_fd_sc_hd__xor2_1       128
     table_lookup                    4

=== table_lookup ===

   Number of wires:                  6
   Number of wire bits:            161
   Number of public wires:           6
   Number of public wire bits:     161
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     T                               4

=== xS ===

   Number of wires:                455
   Number of wire bits:            476
   Number of public wires:           3
   Number of public wire bits:      17
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                467
     $_DFF_P_                        8
     sky130_fd_sc_hd__a2111o_1       1
     sky130_fd_sc_hd__a2111oi_0      6
     sky130_fd_sc_hd__a211oi_1       4
     sky130_fd_sc_hd__a21oi_1       33
     sky130_fd_sc_hd__a221oi_1      11
     sky130_fd_sc_hd__a22o_1         1
     sky130_fd_sc_hd__a22oi_1       25
     sky130_fd_sc_hd__a2bb2oi_1      1
     sky130_fd_sc_hd__a31oi_1        2
     sky130_fd_sc_hd__a32o_1         1
     sky130_fd_sc_hd__a32oi_1        2
     sky130_fd_sc_hd__and2_0         2
     sky130_fd_sc_hd__and3_1         2
     sky130_fd_sc_hd__clkinv_1       1
     sky130_fd_sc_hd__lpflow_inputiso1p_1      1
     sky130_fd_sc_hd__lpflow_isobufsrc_1      5
     sky130_fd_sc_hd__nand2_1       41
     sky130_fd_sc_hd__nand2b_1       8
     sky130_fd_sc_hd__nand3_1       32
     sky130_fd_sc_hd__nand3b_1       6
     sky130_fd_sc_hd__nand4_1       18
     sky130_fd_sc_hd__nand4b_1      10
     sky130_fd_sc_hd__nand4bb_1      5
     sky130_fd_sc_hd__nor2_1        77
     sky130_fd_sc_hd__nor3_1        38
     sky130_fd_sc_hd__nor4_1        17
     sky130_fd_sc_hd__nor4b_1        2
     sky130_fd_sc_hd__nor4bb_1       1
     sky130_fd_sc_hd__o2111ai_1     10
     sky130_fd_sc_hd__o211ai_1       8
     sky130_fd_sc_hd__o21ai_0       46
     sky130_fd_sc_hd__o21bai_1       1
     sky130_fd_sc_hd__o22ai_1       11
     sky130_fd_sc_hd__o311ai_0       1
     sky130_fd_sc_hd__o31ai_1        7
     sky130_fd_sc_hd__o32ai_1        3
     sky130_fd_sc_hd__o41ai_1        3
     sky130_fd_sc_hd__or3_1          1
     sky130_fd_sc_hd__or3b_1         4
     sky130_fd_sc_hd__or4_1          4
     sky130_fd_sc_hd__or4b_1         5
     sky130_fd_sc_hd__xnor2_1        1
     sky130_fd_sc_hd__xor2_1         1

=== design hierarchy ===

   aes_128                           1
     expand_key_128                 10
       S4                            1
         S                           4
     final_round                     1
       S4                            4
         S                           4
     one_round                       9
       table_lookup                  4
         T                           4
           S                         1
           xS                        1

   Number of wires:             157172
   Number of wire bits:         197184
   Number of public wires:        2138
   Number of public wire bits:   39488
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:             169424
     $_DFF_P_                     6976
     sky130_fd_sc_hd__a2111o_1     344
     sky130_fd_sc_hd__a2111oi_0   3464
     sky130_fd_sc_hd__a211o_1      600
     sky130_fd_sc_hd__a211oi_1    1776
     sky130_fd_sc_hd__a21o_1       200
     sky130_fd_sc_hd__a21oi_1    11152
     sky130_fd_sc_hd__a221oi_1    2384
     sky130_fd_sc_hd__a22o_1       344
     sky130_fd_sc_hd__a22oi_1     5000
     sky130_fd_sc_hd__a2bb2oi_1    344
     sky130_fd_sc_hd__a31o_1       200
     sky130_fd_sc_hd__a31oi_1     4288
     sky130_fd_sc_hd__a32o_1       144
     sky130_fd_sc_hd__a32oi_1      488
     sky130_fd_sc_hd__a41o_1       400
     sky130_fd_sc_hd__a41oi_1      800
     sky130_fd_sc_hd__and2_0      1088
     sky130_fd_sc_hd__and3_1       688
     sky130_fd_sc_hd__and3b_1      400
     sky130_fd_sc_hd__and4_1       200
     sky130_fd_sc_hd__and4b_1      400
     sky130_fd_sc_hd__clkinv_1     584
     sky130_fd_sc_hd__lpflow_inputiso1p_1    544
     sky130_fd_sc_hd__lpflow_isobufsrc_1   1920
     sky130_fd_sc_hd__mux2_1       128
     sky130_fd_sc_hd__mux2i_1      200
     sky130_fd_sc_hd__nand2_1    11304
     sky130_fd_sc_hd__nand2b_1    2152
     sky130_fd_sc_hd__nand3_1     9208
     sky130_fd_sc_hd__nand3b_1    1864
     sky130_fd_sc_hd__nand4_1     5592
     sky130_fd_sc_hd__nand4b_1    3240
     sky130_fd_sc_hd__nand4bb_1   2120
     sky130_fd_sc_hd__nor2_1     24488
     sky130_fd_sc_hd__nor2b_1      200
     sky130_fd_sc_hd__nor3_1     12472
     sky130_fd_sc_hd__nor3b_1      800
     sky130_fd_sc_hd__nor4_1      7648
     sky130_fd_sc_hd__nor4b_1     1088
     sky130_fd_sc_hd__nor4bb_1     944
     sky130_fd_sc_hd__o2111ai_1   3440
     sky130_fd_sc_hd__o211ai_1    1752
     sky130_fd_sc_hd__o21ai_0    12024
     sky130_fd_sc_hd__o21bai_1     144
     sky130_fd_sc_hd__o221ai_1    1000
     sky130_fd_sc_hd__o22a_1       400
     sky130_fd_sc_hd__o22ai_1     5584
     sky130_fd_sc_hd__o311ai_0     144
     sky130_fd_sc_hd__o31ai_1     1208
     sky130_fd_sc_hd__o32a_1       200
     sky130_fd_sc_hd__o32ai_1     1032
     sky130_fd_sc_hd__o41ai_1      832
     sky130_fd_sc_hd__or3_1        944
     sky130_fd_sc_hd__or3b_1      1576
     sky130_fd_sc_hd__or4_1       1176
     sky130_fd_sc_hd__or4b_1      2320
     sky130_fd_sc_hd__xnor2_1     1776
     sky130_fd_sc_hd__xnor3_1     1392
     sky130_fd_sc_hd__xor2_1      4144
     sky130_fd_sc_hd__xor3_1       160

End of script. Logfile hash: 8a87cbc1dc
CPU: user 3.42s system 0.02s, MEM: 84.53 MB total, 77.47 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 19% 14x opt_clean (0 sec), 15% 2x techmap (0 sec), ...
